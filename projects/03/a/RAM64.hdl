// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
		DMux8Way(
			in=load,
			sel=address[0..2],
			a=DMux0,
			b=DMux1,
			c=DMux2,
			d=DMux3,
			e=DMux4,
			f=DMux5,
			g=DMux6,
			h=DMux7
	);
		RAM8(in=in, load=DMux0, address=address[3..5], out=RAM0);
		RAM8(in=in, load=DMux1, address=address[3..5], out=RAM1);
		RAM8(in=in, load=DMux2, address=address[3..5], out=RAM2);
		RAM8(in=in, load=DMux3, address=address[3..5], out=RAM3);
		RAM8(in=in, load=DMux4, address=address[3..5], out=RAM4);
		RAM8(in=in, load=DMux5, address=address[3..5], out=RAM5);
		RAM8(in=in, load=DMux6, address=address[3..5], out=RAM6);
		RAM8(in=in, load=DMux7, address=address[3..5], out=RAM7);
    Mux8Way16(
			a=RAM0,
			b=RAM1,
			c=RAM2,
			d=RAM3,
			e=RAM4,
			f=RAM5,
			g=RAM6,
			h=RAM7,
			sel=address[0..2],
			out=out
		);
}
